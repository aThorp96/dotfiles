verbosity = 5

[server]
# exit session if no requests were received during given period in seconds
# works only in unix sockets mode (-s/--session)
# set to 0 to disable
timeout = 1800 # seconds = 30 minutes

[language.rust]
filetypes = ["rust"]
roots = ["Cargo.toml"]
command = "rust-analyzer"

[language.dart]
filetypes = ["dart"]
roots = ["pubspec.yaml"]
command = "dart language-server"

[language.typescript]
filetypes = ["typescript"]
roots = ["package.json"]
command = "typescript-language-server"
args = ["--stdio"]

[language.ruby]
filetypes = ["ruby"]
roots = ["Gemfile"]
command = "bundle"
args = ["exec", "solargraph", "stdio"]

[language.python]
filetypes = ["python"]
roots = ["requirements.txt", "setup.py", ".git", ".hg"]
command = "pylsp"
offset_encoding = "utf-8"
settings_section = "_"

# [language.python.settings._]
# pyls.configurationSources = ["flake8"]
# pylsp.plugins.flake8.enabled = true
# pylsp.plugins.pycodestyle.enabled = false
# pylsp.plugins.mccabe.enabled = false
# pylsp.plugins.pyflakes.enabled = false

# Reference
# https://microsoft.github.io/language-server-protocol/specification#textDocument_semanticTokens

[semantic_tokens]
faces = [
  { face = 'documentation', token = 'comment', modifiers = ['documentation'] },
  { face = 'comment', token = 'comment' },
  { face = 'function', token = 'function' },
  { face = 'keyword', token = 'keyword' },
  { face = 'module', token = 'namespace' },
  { face = 'operator', token = 'operator' },
  { face = 'string', token = 'string' },
  { face = 'type', token = 'type' },
  { face = 'default+d', token = 'variable', modifiers = ['readonly'] },
  { face = 'default+d', token = 'variable', modifiers = ['constant'] },
  { face = 'variable', token = 'variable' }
]
